def main:
push 10
pop [bx+0]
push bx

push [bx+0]
push bx
push 1
add
pop bx
pop [bx+0]

call :fact
pop bx
push ax
pop [bx+0]
push [bx+0]
out
pop 0
push 0
pop ax
hlt

def fact:
push 1
pop [bx+1]
push 1
pop [bx+2]
jump :cond0
def while0:
push [bx+2]
push [bx+1]
mlt
pop [bx+1]
push 1
push [bx+2]
add
pop [bx+2]
def cond0:
push 1
push [bx+0]
add
push [bx+2]
jb :while0
push [bx+1]
pop ax
ret

say
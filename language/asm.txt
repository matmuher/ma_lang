def main:
push 0
pop [bx+0]
push bx

push [bx+0]
push bx
push 2
add
pop bx
pop [bx+0]

call :Fib
pop bx
push ax
pop [bx+1]
push [bx+1]
out
pop 0
push 0
pop ax
hlt

def Fib:
push 0
push [bx+0]
jne :if0
push 0
pop ax
ret

def if0:
say
push 0
push [bx+0]
jne :if1
push 0
pop ax
ret

def if1:
say
push bx

push 0
push [bx+0]
sub
push bx
push 1
add
pop bx
pop [bx+0]

call :Fib
pop bx
push ax
push bx

push 0
push [bx+0]
sub
push bx
push 1
add
pop bx
pop [bx+0]

call :Fib
pop bx
push ax
add
pop ax
ret

say